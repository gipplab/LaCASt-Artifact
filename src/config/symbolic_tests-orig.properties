# This file is for reference only. It has no effect!

# Specify the output file for this test setup
output=/home/andreg-p/Projects/LaCASt/17.2.21-symbolic.txt

# Specify the output file that summarizes which semantic macros could not be translated by LaCASt to the CAS
missing_macro_output=/home/andreg-p/data/Howard/Results/tmp-single-missing.txt

# Specify the subset of test cases. The first number is inclusive, the second number exclusive.
# For example, to test the single line 4 in the test dataset, use subset_tests=4,5.
subset_tests=1,5276

# Set the path to the dataset
dlmf_dataset=/home/andreg-p/data/Howard/together.txt

# Add DLMF links to each line in the result file
show_dlmf_links=true

# Defines what kind of expression you want to simplify.
# For example, (#LHS)/(#RHS) or (#LHS)-(#RHS).
test_expression=(#LHS)-(#RHS)

# Use the following setting to define the expected outcome.
# By default, expect 0. If you test (#LHS)/(#RHS), you may expect 1 instead.
#test_expectation=1

# Use this to make assumptions that infect the entire test suite.
# For example: x should be considered real, add 'x \in \Real'.
# Split multiple assumptions by '||' and use LaTeX notation
entire_test_set_assumptions=x \\in \\Real || y \\in \\Real || z \\in \\Complex || k \\in \\Integer || n \\in \\Integer || m \\in \\Integer

# The following settings control the simplification methods used in Maple only!
# For Mathematica, only the 'FullSimplify' function is used.
# For Maple, you can activate 5 different simplification approaches.
# Simple: 'simplify(...)' - this setting is always enabled
# ConvEXP: 'simplify(convert(..., exp))'
enable_conversion_exp=true

# ConvHYP: 'simplify(convert(..., hypergeom))'
enable_conversion_hypergeom=true

# EXP: 'simplify(expand(...))'
enable_pre_expansion=true

# EXP+EXP: 'simplify(expand(..., exp))'
enable_pre_expansion_with_exp=true

# EXP+HYP: 'simplify(convert(..., hypergeom))'
enable_pre_expansion_with_hypergeom=true

# Sets the time out for each test case in seconds.
# You should avoid large values (more than 600 (> 20min)) for many test values (specified by subset_tests value)
# because this can cause the CAS to get stuck and LaCASt wont
# be able to stop the computation anymore. In this case, you can only kill the process (eg, CTRL+C) to stop
# computation forcefully. If you tested 1000 cases before and you need to kill the computation this way, you lost your
# previous results. Therefore, be careful with this setting!
# For small test subsets, you can increase the threshold.
timeout=5
