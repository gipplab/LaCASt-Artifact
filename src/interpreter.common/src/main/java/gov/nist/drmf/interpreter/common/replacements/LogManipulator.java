package gov.nist.drmf.interpreter.common.replacements;

/**
 * @author Andre Greiner-Petter
 */
public final class LogManipulator {
    private LogManipulator(){}

    /**
     * Shortens the output lists of CAS (looking like [[.., [], [], []], [..., [], []], ...])
     * to a given maximum.
     * @param msg the result list of numeric results generated by a CAS
     * @param maxCases the max number of cases that should be shown
     * @return shortened string
     */
    public static String shortenOutput(String msg, int maxCases) {
        int pos = msg.length();
        int bracketCounter = 1;
        int caseCounter = 0;

        for ( int i = 2; i < msg.length() && caseCounter < maxCases; i++ ) {
            int updateCounter = updateBracketCounter(msg, i);
            if ( updateCounter == 0 ) continue;
            bracketCounter += updateCounter;

            if ( bracketCounter == 0 ) {
                caseCounter++;
                pos = i+2;
            }
        }

        return clip(msg, pos);
    }

    private static int updateBracketCounter( String msg, int i ) {
        char c = msg.charAt(i);
        if ( '{' == c || '[' == c ) return 1;
        else if ( '}' == c || ']' == c ) return -1;
        else return 0;
    }

    private static String clip(String msg, int pos) {
        if ( pos < msg.length() ) {
            return msg.substring(0, pos) + " ...";
        } else return msg;
    }
}
